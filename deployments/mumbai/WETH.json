{
  "address": "0x4bd3DE408d49749be830082f28ec0513464108C3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x11a7e47f53aeefe71f99ba11fb45e02d57aecfef652a7dbe9121ddd3fe47aad2",
  "receipt": {
    "to": null,
    "from": "0x223181B3cbc29b1073D8eB082496680369051bF8",
    "contractAddress": "0x4bd3DE408d49749be830082f28ec0513464108C3",
    "transactionIndex": 2,
    "gasUsed": "620069",
    "logsBloom": "0x
    "blockHash": "0xc8d0562c13d3e35113617e443e4319bab48db9a4da66ab88b593f781ce6d73a2",
    "transactionHash": "0x11a7e47f53aeefe71f99ba11fb45e02d57aecfef652a7dbe9121ddd3fe47aad2",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 41896194,
        "transactionHash": "0x11a7e47f53aeefe71f99ba11fb45e02d57aecfef652a7dbe9121ddd3fe47aad2",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000223181b3cbc29b1073d8eb082496680369051bf8",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000003c054f6134c4e0000000000000000000000000000000000000000000000000ddcd943538c46c00000000000000000000000000000000000000000000003378165bce11f8547be0000000000000000000000000000000000000000000000000dd918ee5d78fa7200000000000000000000000000000000000000000000033781697d361598940c",
        "logIndex": 5,
        "blockHash": "0xc8d0562c13d3e35113617e443e4319bab48db9a4da66ab88b593f781ce6d73a2"
      }
    ],
    "blockNumber": 41896194,
    "cumulativeGasUsed": "785061",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7fae884a20ba8bdff9557fc4fb508ff2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"returns allowance\"},\"approve(address,uint256)\":{\"details\":\"approve spender\"},\"balanceOf(address)\":{\"details\":\"returns balance of an address\"},\"decimals()\":{\"details\":\"Returns total decimals used in representation, i.e : if the balance of address is 1e17, it means the address owns .1 of the Coin.\"},\"mint(address,uint256)\":{\"details\":\"mints `_amount` number of coins to `to` address, only owner of contract i.e deployer, can mint.\"},\"name()\":{\"details\":\"Returns name of token\"},\"symbol()\":{\"details\":\"Returns name of token\"},\"totalSupply()\":{\"details\":\"Returns total supply\"},\"transfer(address,uint256)\":{\"details\":\"transfers coins to the address\"},\"transferFrom(address,address,uint256)\":{\"details\":\"transfer coins `from` address to `to` address, caller must be approved first.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"returns the amount a third party spender can spend on address's behalf\"},\"approve(address,uint256)\":{\"notice\":\"approve a third party spender can spend on address's behalf\"},\"totalSupply()\":{\"notice\":\"total tokens ever issued\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/weth_dummy/Weth.sol\":\"WETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coin/Coins.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.20;\\n\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\n\\n/// @notice contract for ERC20 token (Coins).\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-20[ERC20] Non-Fungible Token Standardy as\\n */\\n/// @title an implementation of ERC20 fungible token contract.\\n/// @author dchouhan-in@github.com\\ncontract Coins is IERC20 {\\n    uint256 internal _totalSupply;\\n\\n    // token name\\n    string internal _name;\\n    // token symbol\\n    string internal _symbol;\\n\\n    // contract owner, currently immutable\\n    address internal _deployer;\\n\\n    mapping(address account => uint256) internal _balances;\\n\\n    mapping(address account => mapping(address spender => uint256))\\n        internal _allowances;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` and `deployer` to the token collection.\\n     */\\n    constructor(string memory tokenName, string memory tokenSymbol) {\\n        _name = tokenName;\\n        _symbol = tokenSymbol;\\n        _deployer = msg.sender;\\n        _mint(msg.sender, 1000 * 1e18);\\n    }\\n\\n    /// @dev Returns name of token\\n    function name() external view override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /// @dev Returns name of token\\n    function symbol() external view override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /// @notice total tokens ever issued\\n    /// @dev Returns total supply\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /** \\n     *  @dev Returns total decimals used in representation,\\n    i.e : if the balance of address is 1e17, it means the address owns .1 of the Coin.\\n\\n    */\\n    function decimals() external pure virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @dev returns balance of an address\\n    function balanceOf(\\n        address account\\n    ) external view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /// @dev transfers coins to the address\\n    function transfer(\\n        address to,\\n        uint256 value\\n    ) external override returns (bool) {\\n        require(_balances[msg.sender] >= value);\\n\\n        _balances[msg.sender] -= value;\\n        _balances[to] += value;\\n        return true;\\n    }\\n\\n    /// @notice returns the amount a third party spender can spend on address's behalf\\n    /// @dev returns allowance\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice approve a third party spender can spend on address's behalf\\n    /// @dev approve spender\\n    function approve(\\n        address spender,\\n        uint256 value\\n    ) external override returns (bool) {\\n        _allowances[msg.sender][spender] = value;\\n        return true;\\n    }\\n\\n    /// @dev transfer coins `from` address to `to` address, caller must be approved first.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external override returns (bool) {\\n        require(_balances[from] >= value, \\\"insufficient balance\\\");\\n        require(\\n            _allowances[from][msg.sender] >= value,\\n            \\\"insufficient balance!\\\"\\n        );\\n        _balances[from] -= value;\\n        _balances[to] += value;\\n        _allowances[from][msg.sender] -= value;\\n        return true;\\n    }\\n\\n    /** \\n     @dev mints `_amount` number of coins to `to` address, only owner of contract i.e deployer, can mint.\\n     */\\n    function mint(address _to, uint256 _amount) public virtual {\\n        require(msg.sender == _deployer, \\\"only contract owner can mint!\\\");\\n        _balances[_to] += _amount;\\n        _totalSupply += _amount;\\n    }\\n\\n    function _mint(address _to, uint256 _amount) internal virtual {\\n        require(msg.sender == _deployer, \\\"only contract owner can mint!\\\");\\n        _balances[_to] += _amount;\\n        _totalSupply += _amount;\\n    }\\n    // TODO: burn, mint internal, common transfer.\\n}\\n\",\"keccak256\":\"0x1c6945c01850487f9226fd85fc97e27453088e824b43820f43385273e42ac242\",\"license\":\"UNLICENSED\"},\"contracts/coin/interfaces/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.20;\\n\\n// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function symbol() external view returns (string memory);\\n\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4af86bb86fbfc97cbb15b0b3835fe11f262caf0547b2e23a26b38aa80694ae56\",\"license\":\"MIT\"},\"contracts/weth_dummy/Weth.sol\":{\"content\":\"pragma solidity 0.8.20;\\n\\nimport {Coins} from \\\"../coin/Coins.sol\\\";\\n\\ncontract WETH is Coins {\\n    constructor() Coins(\\\"dummy wrapped ether\\\", \\\"WETH\\\") {}\\n\\n    function mint(address _to, uint256 _amount) public override {}\\n\\n    function _mint(address _to, uint256 _amount) internal override {}\\n\\n    function deposit() public payable {\\n        require(msg.value > 10e8, \\\"atleast 10e8 wei must be sent!\\\");\\n        uint _amount = msg.value / 10e8;\\n        _balances[msg.sender] += _amount;\\n        _totalSupply += _amount;\\n    }\\n\\n    function withdraw(uint256 amount) public payable {\\n        uint _amount = amount * 10e8;\\n        require(_balances[msg.sender] >= amount, \\\"insufficient balance!\\\");\\n        _balances[msg.sender] -= amount;\\n        _totalSupply -= amount;\\n        bool status = payable(msg.sender).send(_amount);\\n        require(status == true, \\\"caller cannot receive amount!\\\");\\n    }\\n\\n    function decimals() external pure override returns (uint8) {\\n        return 10;\\n    }\\n}\\n\",\"keccak256\":\"0xbbfe636bbdace5b125fb24581bce6d707d7234c2b0b0c3dbdd38cb6890fc92d5\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280601381526020017f64756d6d79207772617070656420657468657200000000000000000000000000815250604051806040016040528060048152602001630ae8aa8960e31b81525081600190816100739190610139565b5060026100808282610139565b50600380546001600160a01b0319163317905550506101f8565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100c457607f821691505b6020821081036100e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561013457600081815260208120601f850160051c810160208610156101115750805b601f850160051c820191505b818110156101305782815560010161011d565b5050505b505050565b81516001600160401b038111156101525761015261009a565b6101668161016084546100b0565b846100ea565b602080601f83116001811461019b57600084156101835750858301515b600019600386901b1c1916600185901b178555610130565b600085815260208120601f198616915b828110156101ca578886015182559484019460019091019084016101ab565b50858210156101e85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108e7806102076000396000f3fe6080604052600436106100a75760003560e01c806340c10f191161006457806340c10f191461017757806370a082311461019657806395d89b41146101cc578063a9059cbb146101e1578063d0e30db014610201578063dd62ed3e1461020957600080fd5b806306fdde03146100ac578063095ea7b3146100d757806318160ddd1461010757806323b872dd146101265780632e1a7d4d14610146578063313ce5671461015b575b600080fd5b3480156100b857600080fd5b506100c161024f565b6040516100ce91906106c4565b60405180910390f35b3480156100e357600080fd5b506100f76100f236600461072e565b6102e1565b60405190151581526020016100ce565b34801561011357600080fd5b506000545b6040519081526020016100ce565b34801561013257600080fd5b506100f7610141366004610758565b610310565b610159610154366004610794565b61047b565b005b34801561016757600080fd5b50604051600a81526020016100ce565b34801561018357600080fd5b5061015961019236600461072e565b5050565b3480156101a257600080fd5b506101186101b13660046107ad565b6001600160a01b031660009081526004602052604090205490565b3480156101d857600080fd5b506100c1610598565b3480156101ed57600080fd5b506100f76101fc36600461072e565b6105a7565b61015961061d565b34801561021557600080fd5b506101186102243660046107cf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60606001805461025e90610802565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610802565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b3360009081526005602090815260408083206001600160a01b0386168452909152902081905560015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103745760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103df5760405162461bcd60e51b8152602060048201526015602482015274696e73756666696369656e742062616c616e63652160581b604482015260640161036b565b6001600160a01b03841660009081526004602052604081208054849290610407908490610852565b90915550506001600160a01b03831660009081526004602052604081208054849290610434908490610865565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061046c908490610852565b90915550600195945050505050565b600061048b82633b9aca00610878565b336000908152600460205260409020549091508211156104e55760405162461bcd60e51b8152602060048201526015602482015274696e73756666696369656e742062616c616e63652160581b604482015260640161036b565b3360009081526004602052604081208054849290610504908490610852565b925050819055508160008082825461051c9190610852565b9091555050604051600090339083156108fc0290849084818181858888f1945050505081151560011490506105935760405162461bcd60e51b815260206004820152601d60248201527f63616c6c65722063616e6e6f74207265636569766520616d6f756e7421000000604482015260640161036b565b505050565b60606002805461025e90610802565b336000908152600460205260408120548211156105c357600080fd5b33600090815260046020526040812080548492906105e2908490610852565b90915550506001600160a01b0383166000908152600460205260408120805484929061060f908490610865565b909155506001949350505050565b633b9aca0034116106705760405162461bcd60e51b815260206004820152601e60248201527f61746c65617374203130653820776569206d7573742062652073656e74210000604482015260640161036b565b6000610680633b9aca003461088f565b336000908152600460205260408120805492935083929091906106a4908490610865565b92505081905550806000808282546106bc9190610865565b909155505050565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072957600080fd5b919050565b6000806040838503121561074157600080fd5b61074a83610712565b946020939093013593505050565b60008060006060848603121561076d57600080fd5b61077684610712565b925061078460208501610712565b9150604084013590509250925092565b6000602082840312156107a657600080fd5b5035919050565b6000602082840312156107bf57600080fd5b6107c882610712565b9392505050565b600080604083850312156107e257600080fd5b6107eb83610712565b91506107f960208401610712565b90509250929050565b600181811c9082168061081657607f821691505b60208210810361083657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030a5761030a61083c565b8082018082111561030a5761030a61083c565b808202811582820484141761030a5761030a61083c565b6000826108ac57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f500ee23884aa7626f4d589905d48c9812f4a764efbd988d14211db0d7abe9bf64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c806340c10f191161006457806340c10f191461017757806370a082311461019657806395d89b41146101cc578063a9059cbb146101e1578063d0e30db014610201578063dd62ed3e1461020957600080fd5b806306fdde03146100ac578063095ea7b3146100d757806318160ddd1461010757806323b872dd146101265780632e1a7d4d14610146578063313ce5671461015b575b600080fd5b3480156100b857600080fd5b506100c161024f565b6040516100ce91906106c4565b60405180910390f35b3480156100e357600080fd5b506100f76100f236600461072e565b6102e1565b60405190151581526020016100ce565b34801561011357600080fd5b506000545b6040519081526020016100ce565b34801561013257600080fd5b506100f7610141366004610758565b610310565b610159610154366004610794565b61047b565b005b34801561016757600080fd5b50604051600a81526020016100ce565b34801561018357600080fd5b5061015961019236600461072e565b5050565b3480156101a257600080fd5b506101186101b13660046107ad565b6001600160a01b031660009081526004602052604090205490565b3480156101d857600080fd5b506100c1610598565b3480156101ed57600080fd5b506100f76101fc36600461072e565b6105a7565b61015961061d565b34801561021557600080fd5b506101186102243660046107cf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60606001805461025e90610802565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610802565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b3360009081526005602090815260408083206001600160a01b0386168452909152902081905560015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103745760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103df5760405162461bcd60e51b8152602060048201526015602482015274696e73756666696369656e742062616c616e63652160581b604482015260640161036b565b6001600160a01b03841660009081526004602052604081208054849290610407908490610852565b90915550506001600160a01b03831660009081526004602052604081208054849290610434908490610865565b90915550506001600160a01b03841660009081526005602090815260408083203384529091528120805484929061046c908490610852565b90915550600195945050505050565b600061048b82633b9aca00610878565b336000908152600460205260409020549091508211156104e55760405162461bcd60e51b8152602060048201526015602482015274696e73756666696369656e742062616c616e63652160581b604482015260640161036b565b3360009081526004602052604081208054849290610504908490610852565b925050819055508160008082825461051c9190610852565b9091555050604051600090339083156108fc0290849084818181858888f1945050505081151560011490506105935760405162461bcd60e51b815260206004820152601d60248201527f63616c6c65722063616e6e6f74207265636569766520616d6f756e7421000000604482015260640161036b565b505050565b60606002805461025e90610802565b336000908152600460205260408120548211156105c357600080fd5b33600090815260046020526040812080548492906105e2908490610852565b90915550506001600160a01b0383166000908152600460205260408120805484929061060f908490610865565b909155506001949350505050565b633b9aca0034116106705760405162461bcd60e51b815260206004820152601e60248201527f61746c65617374203130653820776569206d7573742062652073656e74210000604482015260640161036b565b6000610680633b9aca003461088f565b336000908152600460205260408120805492935083929091906106a4908490610865565b92505081905550806000808282546106bc9190610865565b909155505050565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072957600080fd5b919050565b6000806040838503121561074157600080fd5b61074a83610712565b946020939093013593505050565b60008060006060848603121561076d57600080fd5b61077684610712565b925061078460208501610712565b9150604084013590509250925092565b6000602082840312156107a657600080fd5b5035919050565b6000602082840312156107bf57600080fd5b6107c882610712565b9392505050565b600080604083850312156107e257600080fd5b6107eb83610712565b91506107f960208401610712565b90509250929050565b600181811c9082168061081657607f821691505b60208210810361083657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561030a5761030a61083c565b8082018082111561030a5761030a61083c565b808202811582820484141761030a5761030a61083c565b6000826108ac57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f500ee23884aa7626f4d589905d48c9812f4a764efbd988d14211db0d7abe9bf64736f6c63430008140033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "returns allowance"
      },
      "approve(address,uint256)": {
        "details": "approve spender"
      },
      "balanceOf(address)": {
        "details": "returns balance of an address"
      },
      "decimals()": {
        "details": "Returns total decimals used in representation, i.e : if the balance of address is 1e17, it means the address owns .1 of the Coin."
      },
      "mint(address,uint256)": {
        "details": "mints `_amount` number of coins to `to` address, only owner of contract i.e deployer, can mint."
      },
      "name()": {
        "details": "Returns name of token"
      },
      "symbol()": {
        "details": "Returns name of token"
      },
      "totalSupply()": {
        "details": "Returns total supply"
      },
      "transfer(address,uint256)": {
        "details": "transfers coins to the address"
      },
      "transferFrom(address,address,uint256)": {
        "details": "transfer coins `from` address to `to` address, caller must be approved first."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "returns the amount a third party spender can spend on address's behalf"
      },
      "approve(address,uint256)": {
        "notice": "approve a third party spender can spend on address's behalf"
      },
      "totalSupply()": {
        "notice": "total tokens ever issued"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 10,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 12,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 14,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_deployer",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 18,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 24,
        "contract": "contracts/weth_dummy/Weth.sol:WETH",
        "label": "_allowances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}